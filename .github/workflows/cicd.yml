name: CI-CD pipeline to AWS
env:
  EB_S3_BUCKET_NAME: "illustcomm-bucket"
  EB_APPLICATION_NAME: "Illustcomm"
  EB_ENVIRONMENT_NAME: "Illustcomm-FE"
  DEPLOY_PACKAGE_NAME: "node-app-${{ github.sha }}.zip"
  AWS_REGION_NAME: "ap-northeast-2"

on:
  push: # main 브랜치에 push 되면 아래 작업 실행
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["16.x"]
    steps:
      - uses: actions/checkout@v3 # 현재 코드 내려받기

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }} # 노드 설치하기

      - name: Install dependencies
        run: npm install # 노드모듈 설치하기

      - name: Build App
        run: npm run build # 앱 빌드하기

      - name: Create zip deployment package # 필요한 파일만 압축하기
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x '*.git*' './node_modules/*' './src/*'

      - name: Configure AWS credentials # aws 인증 정보 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copying file to S3 # s3 에 압축한 파일 업로드
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_S3_BUCKET_NAME }}/

      - name: Print message on success finish
        run: echo "CI part finished successfully"

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Configure AWS credentials # aws 인증 정보 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create new EBL app ver # eb 에 새로운 app 버전 (s3 파일 활용) 생성
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "${{ github.sha }}"

      - name: Deploy new app # eb 에 앱 배포
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "${{ github.sha }}"
      - name: Print message on success finish
        run: echo "CD part finished successfully"
